// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  name         String
  email        String
  password     String
  zaps         Zap[]
  otp          Int?
  verify       Boolean @default(false)
  refreshToken String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Zap {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  triggerId String
  trigger   Trigger?
  actions   Action[]
  zapRuns   ZapRun[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trigger {
  id        String           @id @default(uuid())
  metadata  Json             @default("{}")
  
  triggerId String
  type      AvailableTrigger @relation(fields: [triggerId], references: [id])
  
  zapId     String           @unique
  zap       Zap              @relation(fields: [zapId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AvailableTrigger {
  id       String    @id @default(uuid())
  name     String
  image    String
  triggers Trigger[]
}

model Action {
  id       String          @id @default(uuid())
  metadata Json            @default("{}")
  
  zapId    String
  zap      Zap             @relation(fields: [zapId], references: [id])
  
  actionId String
  type     AvailableAction @relation(fields: [actionId], references: [id])

  sortingOrder Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AvailableAction {
  id      String   @id @default(uuid())
  name    String
  image   String
  actions Action[]
}

model ZapRun {
  id    String @id @default(uuid())
  
  zapId String
  zap   Zap    @relation(fields: [zapId], references: [id])

  metadata     Json          @default("{}")
  zapRunOutBox ZapRunOutbox?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ZapRunOutbox {
  id       String @id @default(uuid())
  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
